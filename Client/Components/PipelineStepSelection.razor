<div style="height:15vh;overflow-y:scroll" class="row @(string.Join(' ',Attributes.Where(a=>a.Key=="class").Select(a=>a.Value)))">
    <select style="height:30%" class="form-control col-md-2" @onchange="SelectedStepChanged">
        <option></option>
        @foreach (var step in PossibleSteps)
        {
            <option value="@step.Name">@step.Name</option>
        }
    </select>
    @if (_selectedStep != null)
    {
        @foreach (var param in _selectedStep.TypeDictionary)
        {
            @if (new[] { TypeCode.Int16, TypeCode.UInt16, TypeCode.UInt32, TypeCode.Int64, TypeCode.UInt64, TypeCode.Int32 }.Contains(param.Value))
            {
                <div class="col-md-3">
                    <label class="col-form-label">@param.Key.Name</label>
                    <input @onchange="@(value=>_parameters[param.Key.Position]=int.TryParse(value.Value?.ToString(),out var number)?number:0)"
                           type="number"
                           class="form-control"
                           value="@_parameters[param.Key.Position]" />
                </div>
            }
        }
    }
    <button style="height:30%" @onclick="@AddFilter" class="col-md-2 btn btn-primary m-3">Add Step</button>
    <button style="height:30%" @onclick="@RemoveStep" class="col-md-2 btn btn-danger m-3">Remove Step</button>
    <button style="height:30%" @onclick="@Clear" class="col-md-2 btn btn-danger m-3">Clear</button>
</div>
